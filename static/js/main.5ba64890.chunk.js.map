{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","connect","state","reducer","alert열렸니","reducer2","props","Table","responsive","map","a","i","name","quan","onClick","dispatch","type","데이터","className","Detail","lazy","재고context","React","createContext","Card","useContext","history","useHistory","push","shoes","src","width","App","useState","Data","shoes변경","uii변경","재고","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","exact","path","Jumbotron","Provider","value","axios","get","then","result","data","catch","fallback","goBack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","copy","dataIdx","splice","found","findIndex","초기값copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ba64890.chunk.js","sourcesContent":["export default\r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n] ","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return(\r\n    <div>\r\n    <Table responsive=\"sm\">\r\n        <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n            <th>삭제</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {/* {\r\n            shoes.map((a,i)=>{\r\n              return <Card i={i} shoes={shoes[i]} key={i}/>      \r\n          })\r\n          } */}\r\n        {\r\n            props.state.map((a,i)=>{\r\n                return (\r\n                <tr key ={i}>\r\n                    <td>{ a.id }</td>\r\n                    <td>{ a.name }</td>\r\n                    <td>{ a.quan }</td>\r\n                    <td><button onClick={()=>{props.dispatch({ type : '수량증가', 데이터 : a.id }) }}>+</button> \r\n                    <button onClick={()=>{props.dispatch({type : '수량감소', 데이터 : a.id})}} >-</button>\r\n                    </td>\r\n                    <td>\r\n                    <button onClick={()=>{props.dispatch({ type : '삭제', 데이터 : a.id })}}>삭제</button>\r\n                    </td>\r\n                </tr>\r\n                )\r\n            })\r\n        }\r\n        \r\n        {/* <tr>\r\n            <td>{props.state[0].id}</td>\r\n            <td>{props.state[0].name}</td>\r\n            <td>{props.state[0].quan}</td>\r\n            <td></td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n        </tr> */}\r\n        </tbody>\r\n    </Table>\r\n    {   props.alert열렸니 ===true\r\n        ?(<div className=\"my-alert2\">\r\n        <p>지금 구매하시면 신규 할인 20%</p>\r\n        <button  onClick={()=>{props.dispatch({type : '닫기누름'})}}>닫기</button>\r\n        {/* <button onClick={()=>{props.dispatch({type : '수량감소'})}} >-</button> */}\r\n        </div>)\r\n        : null\r\n    }\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction state를props화(state) {\r\n    return {\r\n        // 상품명 : state[0].name\r\n        state : state.reducer, // store 안에 있던 모든 데이터 state 라는 이름의 props로 바꿔주셈\r\n        alert열렸니 : state.reducer2\r\n    \r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Cart);","\nimport React, {useContext, useState, lazy, Suspense} from 'react';\nimport { Navbar,Container,Nav,NavDropdown,Jumbotron,Button,Badge } from 'react-bootstrap';\nimport {useHistory, useParams, Link, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Data from './data.js';\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\n//import Detail from './Detail.js';\nlet Detail = lazy(()=>import('./Detail.js'));\n\n\n\nexport let 재고context = React.createContext();\n\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [uii,uii변경] = useState(true);\n  let history =useHistory();\n  let [재고, 재고변경] = useState([10,11,12,13,14,15]);\n\n  return (\n    // 디자인\n    <div className=\"App\"> \n      <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"/\">PKS's ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\n            \n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n      </Navbar>\n      \n      <Switch>\n\n      <Route exact path='/'>\n\n      <Jumbotron className=\"background\">\n        <h1 className=\"display-3\">20% Season Off!</h1>\n        <p className=\"lead\">간단하게 만들어본 신발 홈쇼핑 사이트다. 홈쇼핑에 있는 중요한 부분만을 구성해 보았다.</p>\n        <hr className=\"my-2\" />\n        <p>아래에는 진열된 상품들을 볼 수 있다.</p>\n\n      </Jumbotron>\n\n\n      <div className=\"container\">\n\n\n        <재고context.Provider value={재고}>\n\n\n        <div className=\"row\">\n          \n          {\n            shoes.map((a,i)=>{\n              return <Card i={i} shoes={shoes[i]} key={i}/>      \n          })\n          }\n\n            {/* <Card shoes={shoes[0]}/>\n            <Card shoes={shoes[1]}/>\n            <Card shoes={shoes[2]}/> */}\n\n          {/* <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\"/>\n            <h4>{shoes[0].title}</h4>\n            <p>{shoes[0].content} % {shoes[0].price}</p>\n          </div>\n            \n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes2.jpg\" width=\"100%\"/>\n            <h4>상품명1</h4>\n            <p>상푸설명 % 가격</p>\n          </div>\n            \n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes3.jpg\" width=\"100%\"/>\n            <h4>상품명1</h4>\n            <p>상푸설명 % 가격</p>\n          </div> */}\n            \n        </div>\n        \n        </재고context.Provider> \n\n\n        <button className=\"btn btn-primary\" onClick={()=>{\n          <UI/>\n          axios.get(' https://codingapple1.github.io/shop/data2.json')\n          .then((result)=>{\n            uii변경(false);\n            shoes변경([...shoes, ...result.data]);\n          })\n          .catch(()=>{})\n        }}> 더보기 </button>\n      </div>\n      </Route>\n\n      <Route path=\"/detail/:id\">\n\n        <재고context.Provider value={재고}>\n        <Suspense fallback={<div>로딩중이에요</div>}>\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Suspense>\n        </재고context.Provider>\n      </Route>\n\n\n      <Route path=\"/cart\">\n        <Cart></Cart>\n      </Route>\n\n\n      <Route path=\"/:id\">\n        <div> 아무거나 적었을 때 보여주세여</div>\n        <button className=\"btn btn-danger\" onClick={()=>{ history.goBack(); }}>뒤로가기</button>\n      </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props){\n\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return(\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/'+props.shoes.id)}}>\n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg'} width=\"100%\"/>\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} % {props.shoes.price}</p>\n      {/* {'재고 : '}{재고[props.i]} */}\n\n   </div>\n  )\n}\n\nfunction Test(){\n  let 재고 = useContext(재고context);\n  return <p>{재고[0]}</p>\n}\n\nfunction UI(){\n  return (\n  <div>\n    <Badge className=\"primary\">Loading</Badge>\n  </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션){\n  if(액션.type ==='닫기누름'){\n    // state = false;\n    // return state; 해도 되고 아래처럼만 해도 된다\n    return false;\n  } \n  else{\n  return state\n  }\n}\n\n\nlet 초기값 = [\n  \n];\n\nfunction reducer(state = 초기값, 액션){ //액션은 dispatch 할떄 항목들이 전부 액션으로 들어간다\n      if(액션.type ==='삭제'){\n        let copy =[...state];\n        let dataIdx = 액션.데이터.id\n        copy.splice(dataIdx,1);\n        return copy\n      }\n\n      if (액션.type === \"항목추가\") {\n        let found = state.findIndex((a) => {\n          return a.id === 액션.데이터.id;\n        });\n        if (found >= 0) {\n          let 초기값copy = [...state];\n          초기값copy[found].quan++;\n          return 초기값copy;\n        }\n         else {\n          let 초기값copy = [...state];\n          초기값copy.push(액션.데이터);\n          return 초기값copy;\n        }}\n       else if (액션.type === \"수량증가\") {\n        let 초기값copy = [...state];\n        let found = state.findIndex((a) => {\n          return a.id === 액션.데이터;\n        });\n        초기값copy[found].quan++;\n        return 초기값copy;\n      }\n       else if (액션.type === \"수량감소\") {\n        let 초기값copy = [...state];\n        let found = state.findIndex((a) => {\n          return a.id === 액션.데이터;\n        });\n        if (초기값copy[found].quan <= 0) {\n          초기값copy[found].quan = 0;\n        }\n          else {\n          초기값copy[found].quan--;\n        }\n        return 초기값copy;\n      } \n        else {\n        return state;\n      }\n      /*if(액션.type ==='항목추가'){\n\n        let found = state.findIndex((a)=>{ return a.id === 액션.데이터.id }); // a 는 어레이 안에 있는 하나하나의 데이터\n        // 맞는게 있으면 0, 1, 2 이런 데이터가 남는다 그걸 변수에 저장해준다\n        if(found >=0 ){ // found에서 찾은게 있으면 0부터 시작되니까\n         \n        let copy = [...state];\n        copy[found].quan++; //찾은 항목의 수량을 증가시킨다\n        return copy\n\n        }\n        else {\n\n        let copy = [...state];\n        copy.push(액션.데이터);\n        return copy\n        }\n      }\n\n      else if(액션.type=== '수량증가'){ //액션.type은 데이터 수정되는 조건\n        \n        let copy = [...state];\n        copy[액션.데이터].quan++;\n        return copy\n      }\n      else if(액션.type === '수량감소' ){\n        let copy = [...state];\n        if(copy[액션.데이터].quan >0){\n        copy[액션.데이터].quan--;\n        return copy\n        }\n        else{\n          return copy\n        }\n\n      }\n      else{\n        return state // state = 초기값\n      } */\n}\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}